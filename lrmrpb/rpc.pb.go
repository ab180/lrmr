// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: lrmrpb/rpc.proto

package lrmrpb

import (
	pbtypes "github.com/ab180/lrmr/internal/pbtypes"
	lrdd "github.com/ab180/lrmr/lrdd"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobOutput_Type int32

const (
	JobOutput_TASKS_READY            JobOutput_Type = 0
	JobOutput_COLLECT_DATA           JobOutput_Type = 1
	JobOutput_REPORT_TASK_COMPLETION JobOutput_Type = 2
)

// Enum value maps for JobOutput_Type.
var (
	JobOutput_Type_name = map[int32]string{
		0: "TASKS_READY",
		1: "COLLECT_DATA",
		2: "REPORT_TASK_COMPLETION",
	}
	JobOutput_Type_value = map[string]int32{
		"TASKS_READY":            0,
		"COLLECT_DATA":           1,
		"REPORT_TASK_COMPLETION": 2,
	}
)

func (x JobOutput_Type) Enum() *JobOutput_Type {
	p := new(JobOutput_Type)
	*p = x
	return p
}

func (x JobOutput_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobOutput_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_lrmrpb_rpc_proto_enumTypes[0].Descriptor()
}

func (JobOutput_Type) Type() protoreflect.EnumType {
	return &file_lrmrpb_rpc_proto_enumTypes[0]
}

func (x JobOutput_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobOutput_Type.Descriptor instead.
func (JobOutput_Type) EnumDescriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{4, 0}
}

// on type == REPORT_TASK_COMPLETION
type JobOutput_TaskStatus int32

const (
	JobOutput_SUCCEED JobOutput_TaskStatus = 0
	JobOutput_FAILED  JobOutput_TaskStatus = 1
)

// Enum value maps for JobOutput_TaskStatus.
var (
	JobOutput_TaskStatus_name = map[int32]string{
		0: "SUCCEED",
		1: "FAILED",
	}
	JobOutput_TaskStatus_value = map[string]int32{
		"SUCCEED": 0,
		"FAILED":  1,
	}
)

func (x JobOutput_TaskStatus) Enum() *JobOutput_TaskStatus {
	p := new(JobOutput_TaskStatus)
	*p = x
	return p
}

func (x JobOutput_TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobOutput_TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lrmrpb_rpc_proto_enumTypes[1].Descriptor()
}

func (JobOutput_TaskStatus) Type() protoreflect.EnumType {
	return &file_lrmrpb_rpc_proto_enumTypes[1]
}

func (x JobOutput_TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobOutput_TaskStatus.Descriptor instead.
func (JobOutput_TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{4, 1}
}

type Input_Type int32

const (
	Input_PUSH Input_Type = 0
	Input_POLL Input_Type = 1
)

// Enum value maps for Input_Type.
var (
	Input_Type_name = map[int32]string{
		0: "PUSH",
		1: "POLL",
	}
	Input_Type_value = map[string]int32{
		"PUSH": 0,
		"POLL": 1,
	}
)

func (x Input_Type) Enum() *Input_Type {
	p := new(Input_Type)
	*p = x
	return p
}

func (x Input_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Input_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_lrmrpb_rpc_proto_enumTypes[2].Descriptor()
}

func (Input_Type) Type() protoreflect.EnumType {
	return &file_lrmrpb_rpc_proto_enumTypes[2]
}

func (x Input_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Input_Type.Descriptor instead.
func (Input_Type) EnumDescriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{5, 0}
}

type Output_Type int32

const (
	Output_PUSH Output_Type = 0
	Output_POLL Output_Type = 1
)

// Enum value maps for Output_Type.
var (
	Output_Type_name = map[int32]string{
		0: "PUSH",
		1: "POLL",
	}
	Output_Type_value = map[string]int32{
		"PUSH": 0,
		"POLL": 1,
	}
)

func (x Output_Type) Enum() *Output_Type {
	p := new(Output_Type)
	*p = x
	return p
}

func (x Output_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Output_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_lrmrpb_rpc_proto_enumTypes[3].Descriptor()
}

func (Output_Type) Type() protoreflect.EnumType {
	return &file_lrmrpb_rpc_proto_enumTypes[3]
}

func (x Output_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Output_Type.Descriptor instead.
func (Output_Type) EnumDescriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{6, 0}
}

type CreateJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job        *pbtypes.JSON     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Stages     []*Stage          `protobuf:"bytes,2,rep,name=stages,proto3" json:"stages,omitempty"`
	Broadcasts map[string][]byte `protobuf:"bytes,3,rep,name=broadcasts,proto3" json:"broadcasts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateJobRequest) GetJob() *pbtypes.JSON {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *CreateJobRequest) GetStages() []*Stage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *CreateJobRequest) GetBroadcasts() map[string][]byte {
	if x != nil {
		return x.Broadcasts
	}
	return nil
}

type Stage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tasks  []*Task  `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Input  []*Input `protobuf:"bytes,4,rep,name=input,proto3" json:"input,omitempty"`
	Output *Output  `protobuf:"bytes,5,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *Stage) Reset() {
	*x = Stage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stage) ProtoMessage() {}

func (x *Stage) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stage.ProtoReflect.Descriptor instead.
func (*Stage) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *Stage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stage) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Stage) GetInput() []*Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *Stage) GetOutput() *Output {
	if x != nil {
		return x.Output
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartitionID string `protobuf:"bytes,1,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *Task) GetPartitionID() string {
	if x != nil {
		return x.PartitionID
	}
	return ""
}

type StartJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID string `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
}

func (x *StartJobRequest) Reset() {
	*x = StartJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJobRequest) ProtoMessage() {}

func (x *StartJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartJobRequest.ProtoReflect.Descriptor instead.
func (*StartJobRequest) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *StartJobRequest) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

type JobOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type JobOutput_Type `protobuf:"varint,1,opt,name=type,proto3,enum=lrmrpb.JobOutput_Type" json:"type,omitempty"`
	// sender task
	Stage       string `protobuf:"bytes,2,opt,name=stage,proto3" json:"stage,omitempty"`
	PartitionID string `protobuf:"bytes,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	// on type == COLLECT_DATA
	Data       []*lrdd.Row          `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
	TaskStatus JobOutput_TaskStatus `protobuf:"varint,6,opt,name=taskStatus,proto3,enum=lrmrpb.JobOutput_TaskStatus" json:"taskStatus,omitempty"`
	Error      string               `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	Stacktrace string               `protobuf:"bytes,8,opt,name=stacktrace,proto3" json:"stacktrace,omitempty"`
	Metrics    map[string]uint64    `protobuf:"bytes,9,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // metrics per task
}

func (x *JobOutput) Reset() {
	*x = JobOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobOutput) ProtoMessage() {}

func (x *JobOutput) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobOutput.ProtoReflect.Descriptor instead.
func (*JobOutput) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *JobOutput) GetType() JobOutput_Type {
	if x != nil {
		return x.Type
	}
	return JobOutput_TASKS_READY
}

func (x *JobOutput) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *JobOutput) GetPartitionID() string {
	if x != nil {
		return x.PartitionID
	}
	return ""
}

func (x *JobOutput) GetData() []*lrdd.Row {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *JobOutput) GetTaskStatus() JobOutput_TaskStatus {
	if x != nil {
		return x.TaskStatus
	}
	return JobOutput_SUCCEED
}

func (x *JobOutput) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *JobOutput) GetStacktrace() string {
	if x != nil {
		return x.Stacktrace
	}
	return ""
}

func (x *JobOutput) GetMetrics() map[string]uint64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Input_Type `protobuf:"varint,1,opt,name=type,proto3,enum=lrmrpb.Input_Type" json:"type,omitempty"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *Input) GetType() Input_Type {
	if x != nil {
		return x.Type
	}
	return Input_PUSH
}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Output_Type `protobuf:"varint,1,opt,name=type,proto3,enum=lrmrpb.Output_Type" json:"type,omitempty"`
	// partitionKeyToHost contains an ordered mapping of partition key to output hostname.
	PartitionToHost map[string]string `protobuf:"bytes,2,rep,name=partitionToHost,proto3" json:"partitionToHost,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *Output) GetType() Output_Type {
	if x != nil {
		return x.Type
	}
	return Output_PUSH
}

func (x *Output) GetPartitionToHost() map[string]string {
	if x != nil {
		return x.PartitionToHost
	}
	return nil
}

type HostMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host   string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	TaskID string `protobuf:"bytes,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *HostMapping) Reset() {
	*x = HostMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostMapping) ProtoMessage() {}

func (x *HostMapping) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostMapping.ProtoReflect.Descriptor instead.
func (*HostMapping) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *HostMapping) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *HostMapping) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID string `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTaskResponse) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

// PushDataRequest is a request to push data for a worker to process.
// metadata with key "header" and value of DataHeader is required.
type PushDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*lrdd.Row `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PushDataRequest) Reset() {
	*x = PushDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushDataRequest) ProtoMessage() {}

func (x *PushDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushDataRequest.ProtoReflect.Descriptor instead.
func (*PushDataRequest) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *PushDataRequest) GetData() []*lrdd.Row {
	if x != nil {
		return x.Data
	}
	return nil
}

// PollDataRequest is a request to poll data for a worker to process.
// metadata with key "header" and value of DataHeader is required.
type PollDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// N is maximum number of the data returned.
	N int64 `protobuf:"varint,1,opt,name=n,proto3" json:"n,omitempty"`
}

func (x *PollDataRequest) Reset() {
	*x = PollDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollDataRequest) ProtoMessage() {}

func (x *PollDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollDataRequest.ProtoReflect.Descriptor instead.
func (*PollDataRequest) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *PollDataRequest) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

type PollDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*lrdd.Row `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	IsEOF bool        `protobuf:"varint,2,opt,name=isEOF,proto3" json:"isEOF,omitempty"`
}

func (x *PollDataResponse) Reset() {
	*x = PollDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollDataResponse) ProtoMessage() {}

func (x *PollDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollDataResponse.ProtoReflect.Descriptor instead.
func (*PollDataResponse) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *PollDataResponse) GetData() []*lrdd.Row {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PollDataResponse) GetIsEOF() bool {
	if x != nil {
		return x.IsEOF
	}
	return false
}

type DataHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID   string `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	FromHost string `protobuf:"bytes,2,opt,name=fromHost,proto3" json:"fromHost,omitempty"`
}

func (x *DataHeader) Reset() {
	*x = DataHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lrmrpb_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHeader) ProtoMessage() {}

func (x *DataHeader) ProtoReflect() protoreflect.Message {
	mi := &file_lrmrpb_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHeader.ProtoReflect.Descriptor instead.
func (*DataHeader) Descriptor() ([]byte, []int) {
	return file_lrmrpb_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *DataHeader) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

func (x *DataHeader) GetFromHost() string {
	if x != nil {
		return x.FromHost
	}
	return ""
}

var File_lrmrpb_rpc_proto protoreflect.FileDescriptor

var file_lrmrpb_rpc_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x6c, 0x72, 0x64, 0x64, 0x2f, 0x72, 0x6f,
	0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x70, 0x62, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x25, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x72,
	0x6d, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x1a, 0x3d, 0x0a, 0x0f,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70,
	0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x23, 0x0a,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c,
	0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04,
	0x22, 0x28, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x27, 0x0a, 0x0f, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x44, 0x22, 0xe6, 0x03, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x72, 0x64, 0x64, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70,
	0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x72, 0x6d, 0x72,
	0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x45,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x5f,
	0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4c, 0x4c, 0x45,
	0x43, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x22, 0x25, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x22, 0x4b, 0x0a, 0x05,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1a, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x50, 0x4f, 0x4c, 0x4c, 0x10, 0x01, 0x22, 0xe0, 0x01, 0x0a, 0x06, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a,
	0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x1a, 0x42, 0x0a, 0x14,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x1a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x53, 0x48,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x4c, 0x4c, 0x10, 0x01, 0x22, 0x39, 0x0a, 0x0b,
	0x48, 0x6f, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x72, 0x64, 0x64, 0x2e, 0x52, 0x6f,
	0x77, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1f, 0x0a, 0x0f, 0x50, 0x6f, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x6e, 0x22, 0x47, 0x0a, 0x10, 0x50, 0x6f, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6c, 0x72, 0x64,
	0x64, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x73, 0x45, 0x4f, 0x46, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x4f,
	0x46, 0x22, 0x40, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x48,
	0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x48,
	0x6f, 0x73, 0x74, 0x32, 0xd6, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x18, 0x2e, 0x6c, 0x72, 0x6d, 0x72,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x14, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x17, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62,
	0x49, 0x6e, 0x46, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x17, 0x2e, 0x6c,
	0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x30, 0x01, 0x12, 0x3d, 0x0a, 0x08, 0x50, 0x75,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x01, 0x12, 0x41, 0x0a, 0x08, 0x50, 0x6f, 0x6c,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x50,
	0x6f, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x1e, 0x5a, 0x1c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x62, 0x31, 0x38, 0x30,
	0x2f, 0x6c, 0x72, 0x6d, 0x72, 0x2f, 0x6c, 0x72, 0x6d, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lrmrpb_rpc_proto_rawDescOnce sync.Once
	file_lrmrpb_rpc_proto_rawDescData = file_lrmrpb_rpc_proto_rawDesc
)

func file_lrmrpb_rpc_proto_rawDescGZIP() []byte {
	file_lrmrpb_rpc_proto_rawDescOnce.Do(func() {
		file_lrmrpb_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_lrmrpb_rpc_proto_rawDescData)
	})
	return file_lrmrpb_rpc_proto_rawDescData
}

var file_lrmrpb_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_lrmrpb_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_lrmrpb_rpc_proto_goTypes = []interface{}{
	(JobOutput_Type)(0),        // 0: lrmrpb.JobOutput.Type
	(JobOutput_TaskStatus)(0),  // 1: lrmrpb.JobOutput.TaskStatus
	(Input_Type)(0),            // 2: lrmrpb.Input.Type
	(Output_Type)(0),           // 3: lrmrpb.Output.Type
	(*CreateJobRequest)(nil),   // 4: lrmrpb.CreateJobRequest
	(*Stage)(nil),              // 5: lrmrpb.Stage
	(*Task)(nil),               // 6: lrmrpb.Task
	(*StartJobRequest)(nil),    // 7: lrmrpb.StartJobRequest
	(*JobOutput)(nil),          // 8: lrmrpb.JobOutput
	(*Input)(nil),              // 9: lrmrpb.Input
	(*Output)(nil),             // 10: lrmrpb.Output
	(*HostMapping)(nil),        // 11: lrmrpb.HostMapping
	(*CreateTaskResponse)(nil), // 12: lrmrpb.CreateTaskResponse
	(*PushDataRequest)(nil),    // 13: lrmrpb.PushDataRequest
	(*PollDataRequest)(nil),    // 14: lrmrpb.PollDataRequest
	(*PollDataResponse)(nil),   // 15: lrmrpb.PollDataResponse
	(*DataHeader)(nil),         // 16: lrmrpb.DataHeader
	nil,                        // 17: lrmrpb.CreateJobRequest.BroadcastsEntry
	nil,                        // 18: lrmrpb.JobOutput.MetricsEntry
	nil,                        // 19: lrmrpb.Output.PartitionToHostEntry
	(*pbtypes.JSON)(nil),       // 20: pbtypes.JSON
	(*lrdd.Row)(nil),           // 21: lrdd.Row
	(*emptypb.Empty)(nil),      // 22: google.protobuf.Empty
}
var file_lrmrpb_rpc_proto_depIdxs = []int32{
	20, // 0: lrmrpb.CreateJobRequest.job:type_name -> pbtypes.JSON
	5,  // 1: lrmrpb.CreateJobRequest.stages:type_name -> lrmrpb.Stage
	17, // 2: lrmrpb.CreateJobRequest.broadcasts:type_name -> lrmrpb.CreateJobRequest.BroadcastsEntry
	6,  // 3: lrmrpb.Stage.tasks:type_name -> lrmrpb.Task
	9,  // 4: lrmrpb.Stage.input:type_name -> lrmrpb.Input
	10, // 5: lrmrpb.Stage.output:type_name -> lrmrpb.Output
	0,  // 6: lrmrpb.JobOutput.type:type_name -> lrmrpb.JobOutput.Type
	21, // 7: lrmrpb.JobOutput.data:type_name -> lrdd.Row
	1,  // 8: lrmrpb.JobOutput.taskStatus:type_name -> lrmrpb.JobOutput.TaskStatus
	18, // 9: lrmrpb.JobOutput.metrics:type_name -> lrmrpb.JobOutput.MetricsEntry
	2,  // 10: lrmrpb.Input.type:type_name -> lrmrpb.Input.Type
	3,  // 11: lrmrpb.Output.type:type_name -> lrmrpb.Output.Type
	19, // 12: lrmrpb.Output.partitionToHost:type_name -> lrmrpb.Output.PartitionToHostEntry
	21, // 13: lrmrpb.PushDataRequest.data:type_name -> lrdd.Row
	21, // 14: lrmrpb.PollDataResponse.data:type_name -> lrdd.Row
	4,  // 15: lrmrpb.Node.CreateJob:input_type -> lrmrpb.CreateJobRequest
	7,  // 16: lrmrpb.Node.StartJobInBackground:input_type -> lrmrpb.StartJobRequest
	7,  // 17: lrmrpb.Node.StartJobInForeground:input_type -> lrmrpb.StartJobRequest
	13, // 18: lrmrpb.Node.PushData:input_type -> lrmrpb.PushDataRequest
	14, // 19: lrmrpb.Node.PollData:input_type -> lrmrpb.PollDataRequest
	22, // 20: lrmrpb.Node.CreateJob:output_type -> google.protobuf.Empty
	22, // 21: lrmrpb.Node.StartJobInBackground:output_type -> google.protobuf.Empty
	8,  // 22: lrmrpb.Node.StartJobInForeground:output_type -> lrmrpb.JobOutput
	22, // 23: lrmrpb.Node.PushData:output_type -> google.protobuf.Empty
	15, // 24: lrmrpb.Node.PollData:output_type -> lrmrpb.PollDataResponse
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_lrmrpb_rpc_proto_init() }
func file_lrmrpb_rpc_proto_init() {
	if File_lrmrpb_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lrmrpb_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lrmrpb_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lrmrpb_rpc_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lrmrpb_rpc_proto_goTypes,
		DependencyIndexes: file_lrmrpb_rpc_proto_depIdxs,
		EnumInfos:         file_lrmrpb_rpc_proto_enumTypes,
		MessageInfos:      file_lrmrpb_rpc_proto_msgTypes,
	}.Build()
	File_lrmrpb_rpc_proto = out.File
	file_lrmrpb_rpc_proto_rawDesc = nil
	file_lrmrpb_rpc_proto_goTypes = nil
	file_lrmrpb_rpc_proto_depIdxs = nil
}
